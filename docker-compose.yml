version: "3"

volumes:
  redis-data:
  postgres-data:

services:

  # use jwilder/nginx-proxy to auto load balance across back end services (mimics AWS ALB)
  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '88:88'
      # - '443:15443'
  api:
    build:
      context: server
      dockerfile: Dockerfile
      args:
        NODE_VERSION: "12.16.2"
        APP_VERSION:
    links:
      - postgres:postgres.service.mesh
      - kafka:kafka.service.mesh
    volumes:
      - ./server:/home/app
    # ports:
    #   - 9229:9229
    #   - 5000:5000
    depends_on:
      - kafka
      - postgres
    command: yarn debug
    environment:
      NODE_ENV: development
      PORT: 5000
      APP_VERSION:

  app:
    build:
      context: client
      dockerfile: Dockerfile
      args:
        NODE_VERSION:
        APP_VERSION:
    # ports:
    #   - 9229:9229
    #   - 3000:3000
    expose:
      - "3000"
    volumes:
      - ./client:/home/app
    depends_on:
      - api
    environment:
      NODE_ENV: development
      PORT: 3000

  kafka:
    image: spotify/kafka
    # ports:
    #   - 2181:2181
    #   - 9092:9092
    environment:
      TOPICS: command-stream,event-stream
      AUTO_CREATE_TOPICS: "true"
      NUM_PARTITIONS: 1

  postgres:
    # this image should match the major/minor version we use in prod!
    # https://github.com/Mudano/postgres-replication-rds
    image: postgres:latest
    ports:
      - "5435:5435"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: taskmanagement
      POSTGRES_INITDB_ARGS: ''
